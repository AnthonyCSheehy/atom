Dependencies
------------

* php 5.4.0 or newer
* php5-ldap
* nodejs, npm, grunt-cli

Storage service configuration
-----------------------------

The Archivematica service handles storage of AIPs. The DRMC interfaces with
it to allow the downloading of AIPs/AIP files and the recovery of AIPs.

# To interface with the Archivematica Storage Service, define these
  environment variables (e.g. in your PHP pool):

  env[ARCHIVEMATICA_SS_HOST] = "127.0.0.1"
  env[ARCHIVEMATICA_SS_PORT] = "8000"
  env[ARCHIVEMATICA_SS_PIPELINE_UUID] = "6117c5fa-d63f-44d8-9920-89468c68683e"


LDAP configuration
------------------

# Install php5-ldap and make sure that the module is being loaded.

# Define the following environment variables (e.g. in your PHP pool):

  env[ATOM_DRMC_LDAP_ADMIN_USERNAME] = "foo"
  env[ATOM_DRMC_LDAP_ADMIN_PASSWORD] = "bar"

# Create apps/qubit/config/factories.yml if it doesn't exist yet (this file is
  not tracked by git) with the following contents:

  all:
    user:
      class: adLdapUser

# Create apps/qubit/config/app.yml if it doesn't exist yet (this file is not
  tracked by git) with the following contents:

  all:
    ldap_account_suffix: "@example.com"
    ldap_base_dn: DC=EXAMPLE,DC=COM
    ldap_domain_controllers: ad01.example.com
    ldap_user_group: CN=AtoM users,OU=Archivists,OU=Groups,DC=EXAMPLE,DC=COM

# Clear the Symfony cache and restart your pool.

NOTE: This application will check if existing LDAP users are member of the group
defined in ldap_user_group.
